set serveroutput on;

declare
    v_salary binary_integer;                     -- 정수가 나오게 하기 위해서 binary_integer로 선언! (case문에서 범위 설정이 불가하기 때문에)
begin
    select salary into v_salary from employees where employee_id = 100;
    v_salary := v_salary / 10000;                                             -- PLSQL에서는 소수점까지 나오는데, 대입하는 순간, 정수로 나옴!
    case v_salary
        when 2 then dbms_output.put_line('이사');
        when 1 then dbms_output.put_line('부장');
        when 0 then dbms_output.put_line('대리');
        else dbms_output.put_line('사원');
    end case;
end;
/

declare
    v_year binary_integer := &year;
    v_result varchar2(20);
    v_date date;
begin
    select hire_date into v_date from employees where employee_id = 100;
    v_year := to_number(to_char(v_date, 'YYYY'));
    v_year := mod(v_year, 12);        -- SQL 함수 사용가능! 그룹함수만 불가능
    case v_year
    when 0 then v_result := '원쏭이띠';
    when 1 then v_result := '닭띠';
    when 2 then v_result := '개띠';
    when 3 then v_result := '돼지띠';
    when 4 then v_result := '쥐띠';
    when 5 then v_result := '소띠';
    when 6 then v_result := '호랑이띠';
    when 7 then v_result := '또기띠';
    when 8 then v_result := '용띠';
    when 9 then v_result := '뱀띠';
    when 10 then v_result := '말띠';
    when 11 then v_result := '양띠';
    end case;
    dbms_output.put_line('띠 : ' || v_result);
end;
/

    -- AND
    if NULL and TRUE then dbms_output.put_line('참');       -- false
    else dbms_output.put_line('거짓');
    end if;
    if NULL and FALSE then dbms_output.put_line('참');       -- false
    else dbms_output.put_line('거짓');
    end if;
    if NULL and NULL then dbms_output.put_line('참');       -- false
    else dbms_output.put_line('거짓');
    end if;
    
    -- OR
    if NULL or TRUE then dbms_output.put_line('참');       -- true
    else dbms_output.put_line('거짓');
    end if;
    if NULL or FALSE then dbms_output.put_line('참');       -- false
    else dbms_output.put_line('거짓');
    end if;
    if NULL or NULL then dbms_output.put_line('참');       -- true
    else dbms_output.put_line('거짓');
    end if;
    
declare
    v_init number := 0;
begin
    loop
        v_init := v_init +1;
        exit when v_init > 3;
        dbms_output.put_line('v_init : ' || v_init);
    end loop;
end;
/

begin 
    for i in 1..3 loop
        dbms_output.put_line('i: '|| i);
    end loop;
end;
/
--
--begin 
--    for i in 2.3..5 loop
--        dbms_output.put_line('i: '|| i);
--    end loop;
--end;
--/

begin 
    for i in reverse 1..10 loop
        dbms_output.put_line('i: '|| i);
    end loop;
end;
/

declare
    result number := 0;
begin
    for i in 1..100 loop
        result := result + i;
    end loop;
    dbms_output.put_line('sum: ' || result);
end;
/

declare
    result number := 0;
begin
    for i in 1..100 loop
        if mod(i, 2) = 0
            then    result := result + i;
        end if;
    end loop;
    dbms_output.put_line('sum: ' || result);
end;
/

declare
    result number := 0;
begin
    for i in 2..9 loop
        dbms_output.put_line(i || '단');
        for j in 1..9 loop
            result := i * j;
            dbms_output.put_line(i || ' * ' || j || ' = ' || result);
        end loop;
    end loop;
end;
/

<<레코드>>
 -- 1
declare
    v_eid employees.employee_id%type;
    v_lname employees.last_name%type;
    v_jid employees.job_id%type;
begin
    select employee_id, last_name, job_id into v_eid, v_lname, v_jid from employees
    where employee_id = 200;
    dbms_output.put_line(v_eid);
    dbms_output.put_line(v_lname);
    dbms_output.put_line(v_jid);
end;
/
    -- 2
declare
    type t_employee is
    record(v_eid number(4), v_lname varchar(50), v_jid employees.job_id%type);
    v_employee t_employee;
begin
    select employee_id, last_name, job_id
    into v_employee
    from employees where employee_id = 200;
end;
/
    -- 3
<%rowtype>
declare
    v_employee employees%rowtype;
begin
    select * into v_employee from employees where employee_id = 200;
    dbms_output.put_line(v_employee.employee_id);
    dbms_output.put_line(v_employee.last_name);
    dbms_output.put_line(v_employee.salary);
end;
/

-- 3가지 중 마지막 방법이 편하다!

create table emps as select * from employees where 1 = 0;

< insert >
declare
    v_emp emps%ROWTYPE;
begin
    select * into v_emp from employees where employee_id = 200;
    insert into emps values(v_emp.employee_id, v_emp.first_name, v_emp.last_name, v_emp.hire_date, v_emp.job_id, v_emp.salary, v_emp.department_id);
    if SQL%FOUND then dbms_output.put_line('성공');
    else dbms_output.put_line('가입실패');
    end if;
end;
/

select * from emps;

< update >
declare
    v_emp emps%ROWTYPE;
begin
    select * into v_emp from employees where employee_id = 200;
    v_emp.job_id := 'IT_PROG';
    v_emp.salary := 10000;
    v_emp.department_id := 50;
    insert into emps values(v_emp.employee_id, v_emp.first_name, v_emp.last_name, v_emp.hire_date, v_emp.job_id, v_emp.salary, v_emp.department_id);
    if SQL%FOUND then dbms_output.put_line('성공');
    else dbms_output.put_line('가입실패');
    end if;
end;
/
 -- OR

begin
    delete from emps where department_id = 10;
    update emps set employee_id = 300, salary =20000 where department_id = 50;
    if SQL%FOUND then dbms_output.put_line('SUCCESS');
    else dbms_output.put_line('FAIL');
    end if;
end;
/
